% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mppi_rest.R
\name{mppi_rest}
\alias{mppi_rest}
\title{Resting-state multiPPI wrapper}
\usage{
mppi_rest(
  data,
  runs = NULL,
  modulators = NULL,
  include = c("states", "bursts", "envelopes"),
  basis = list(type = "pca", r = 120L),
  modulator_domain = c("auto", "bold", "neural"),
  domain = c("neural", "bold", "innovations"),
  prewhiten = TRUE,
  ar_method = "ar",
  ar_order = "auto",
  nuisance = NULL,
  attach_pk = TRUE,
  ...
)
}
\arguments{
\item{data}{Matrix or fmri_dataset providing the time series.}

\item{runs}{Optional run labels.}

\item{modulators}{Optional pre-built modulators; if NULL they are derived from
the basis time-series.}

\item{include}{Which modulator families to construct when \code{modulators} is NULL.}

\item{basis}{Basis specification passed to \code{.mppi_resolve_basis()}.}

\item{modulator_domain}{Domain for building modulators ("auto", "bold", "neural").}

\item{domain}{Domain for the final mPPI fit.}

\item{prewhiten}{Use fmriAR prewhitening (default TRUE when available).}

\item{ar_method, ar_order}{Controls for fmriAR noise modelling.}

\item{nuisance}{Optional nuisance regressors aligned with the data.}

\item{attach_pk}{Attach residualized modulator list to the returned fit.}

\item{...}{Passed through to \code{mppi_fit()} / \code{mppi_fit_whitened()}.}
}
\value{
\code{mppi_fit} object.
}
\description{
Resting-state multiPPI wrapper
}
