% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mppi_deconv_dct.R
\name{mppi_deconv_dct}
\alias{mppi_deconv_dct}
\title{DCT-regularized hemodynamic deconvolution (fast, vectorized via Rcpp)}
\usage{
mppi_deconv_dct(
  Y,
  h,
  K = NULL,
  method = c("gcv", "fixed"),
  lambda = 0.1,
  q = NULL
)
}
\arguments{
\item{Y}{numeric matrix T x R (prewhitened residuals, or basis-projected components)}

\item{h}{numeric vector HRF kernel (in TR units)}

\item{K}{integer, number of DCT components (default 64 or T/2)}

\item{method}{"gcv" (default) for per-column GCV lambda, or "fixed"}

\item{lambda}{fixed ridge if method="fixed"}

\item{q}{optional length-K vector of frequency prior weights (diagonal of Q); default uniform}
}
\value{
list with U (T x R neural estimates), beta (K x R coefficients), lambda (R vector)
}
\description{
Implements a DCT-basis deconvolution with Tikhonov/frequency prior as advocated by
Gitelman et al. (2003) for forming interaction terms in neural space. Operates column-wise
on a T x R matrix and chooses the penalty per column by generalized cross-validation.
}
\examples{
\dontrun{
  library(mppiDeconv)
  TR <- 2; T <- 300; t <- seq(0, (T-1))*TR
  h <- fmrihrf::spm_hrf(TR)  # or any HRF kernel vector
  Y <- matrix(rnorm(T*10), T, 10)  # 10 components or voxels
  out <- mppi_deconv_dct(Y, h, K = 64, method = "gcv")
  U   <- out$U
}
}
