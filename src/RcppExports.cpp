// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// deconv_dct_multi
Rcpp::List deconv_dct_multi(const arma::mat& Y, const arma::vec& h, const int K, Rcpp::Nullable<Rcpp::NumericVector> q_in, const std::string method, const double lambda_fixed, const int ngrid, const double lam_lo, const double lam_hi);
RcppExport SEXP _multiPPI_deconv_dct_multi(SEXP YSEXP, SEXP hSEXP, SEXP KSEXP, SEXP q_inSEXP, SEXP methodSEXP, SEXP lambda_fixedSEXP, SEXP ngridSEXP, SEXP lam_loSEXP, SEXP lam_hiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type h(hSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type q_in(q_inSEXP);
    Rcpp::traits::input_parameter< const std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda_fixed(lambda_fixedSEXP);
    Rcpp::traits::input_parameter< const int >::type ngrid(ngridSEXP);
    Rcpp::traits::input_parameter< const double >::type lam_lo(lam_loSEXP);
    Rcpp::traits::input_parameter< const double >::type lam_hi(lam_hiSEXP);
    rcpp_result_gen = Rcpp::wrap(deconv_dct_multi(Y, h, K, q_in, method, lambda_fixed, ngrid, lam_lo, lam_hi));
    return rcpp_result_gen;
END_RCPP
}
// mppi_deconv_map
arma::mat mppi_deconv_map(const arma::mat& Y, const arma::vec& h, const double lambda);
RcppExport SEXP _multiPPI_mppi_deconv_map(SEXP YSEXP, SEXP hSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type h(hSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(mppi_deconv_map(Y, h, lambda));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_multiPPI_deconv_dct_multi", (DL_FUNC) &_multiPPI_deconv_dct_multi, 9},
    {"_multiPPI_mppi_deconv_map", (DL_FUNC) &_multiPPI_mppi_deconv_map, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_multiPPI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
